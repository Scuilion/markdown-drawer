Given markdown (a simple markdown file):
  # Main Title
      something
  ### First Sub
      else
      multi
  #### Second Second

  # Second Main
  A list
  - one
  - two
  ###
  ## First of Second
  Some lorem Ipsum with
  multiple line

Execute (MarkdownLevel):
  let actual = levels#MarkdownLevel()
  Assert len(actual) == 6

Then (only one row should be marked active):
  let i = 0
  let activeCount = 0
  while i<= len(actual) - 1
    if actual[i].active == 1
      let activeCount = activeCount + 1
    endif
    let i = i+1
  endwhile
  Assert activeCount == 1

Given markdown (a markdown file with fencing):
  # First Title
  ``` 
  #!/usr/bin/env bash
  #A comment
  cat foo.txt
  ``` 
  # Second Title

Execute (Hash symbol in fenced code should be ignored):
  let actual = levels#MarkdownLevel()
  Assert len(actual) == 2

Given markdown (a mardown file with missing title text):
  ### 

Execute (default header will be substituted):
  let actual = levels#MarkdownLevel()
  Assert actual[0].header == '  <no header>'

Given markdown (an empty file):
Execute (empty file does not blow up):
  let actual = levels#MarkdownLevel()
  Assert len(actual) == 0

Given markdown (no headers):
  some text

Execute (no headers does not blow up):
  let actual = levels#MarkdownLevel()
  Assert len(actual) == 0
  
Given markdown (two levels):
  # first
  ## second

Execute (set header level to one):
  let g:markdown_drawer_max_levels=1
  let actual = levels#MarkdownLevel()
  Assert len(actual) == 1

